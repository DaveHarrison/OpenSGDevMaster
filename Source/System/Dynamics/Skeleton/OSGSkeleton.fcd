<?xml version="1.0"?>

<FieldContainer
   name="Skeleton"
   parent="AttachmentContainer"
   mixinparent="SkeletonParent"
   library="Dynamics"
   pointerfieldtypes="both"
   structure="concrete"
   systemcomponent="true"
   parentsystemcomponent="true"
   decoratable="false"
   childFields="both"
   parentFields="both"
>
  A Skeleton is simply one (or multiple) node hierarchies that contain some
  SkeletonJoint cores.
  Traversal will jump to the roots (MFRoots) of these hierarchies and traverse
  them, updating the matrix for each joint (MFJointMatrices) in the process.
  A Skeleton assumes exclusive ownership of its joints, but the Skeleton itself
  may be shared.

  <Field
     name="roots"
     type="Node"
     category="pointer"
     cardinality="multi"
     visibility="external"
     access="public"
     >
    The roots of the joint (or bone) hierarchies for the skeleton.
    There should be Nodes with SkeletonJoint cores in the pointed-to
    hierarchies.
  </Field>

  <Field
     name="joints"
     type="BaseSkeletonJoint"
     category="childpointer"
     linkParentField="Skeleton"
     cardinality="multi"
     visibility="external"
     access="public"
     >
    The joints (or bones) of the skeleton. Sorted by their jointId.
    READ ONLY: You should never write to this field, Skeleton scans
    for joints whenever the set of roots is modified.
  </Field>

  <Field
     name="parentJoints"
     type="BaseSkeletonJoint"
     category="pointer"
     cardinality="multi"
     visibility="internal"
     access="public"
     >
    Stores the parent of each joint at the position of the childs jointId.
    In other words parentJoints[i] is the parent of the joint with
    jointId i (which is stored in joints[i]). If the joint has no parent
    NULL is stored instead.
    READ ONLY: You should never write to this field, Skeleton scans
    for joints whenever the set of roots is modified.
  </Field>

  <Field
     name="jointMatrices"
     type="Matrix"
     category="data"
     cardinality="multi"
     visibility="internal"
     access="public"
     >
    Matrices for all joints of the skeleton. Elements correspond to
    joints at the same index in _mfJoints.
    These matrices are absolute, not relative to the parent joint.
    READ ONLY: You should never write to this field, Skeleton updates
    it during the RenderActions traversal.
  </Field>

  <Field
     name="jointNormalMatrices"
     type="Matrix"
     category="data"
     cardinality="multi"
     visibility="internal"
     access="public"
     >
    Normal matrices for all joints of the skeleton (these are the inverse
    transpose of the jointMatrices). Elements correspond to
    joints at the same index in _mfJoints.
    These matrices are absolute, not relative to the parent joint.
    READ ONLY: You should never write to this field, Skeleton updates
    it during the RenderActions traversal.
  </Field>

  <Field
     name="useInvBindMatrix"
     type="bool"
     category="data"
     cardinality="single"
     visibility="external"
     access="public"
     defaultValue="true"
     >
    Whether joints should use their SFInvBindMatrix when computing
    the jointMatrices/jointNormalMatrices.
    This is normally set automatically by a SkinnedGeometry as for
    debug rendering of the bones this must be false.
  </Field>

  <Field
     name="calcNormalMatrices"
     type="bool"
     category="data"
     cardinality="single"
     visibility="external"
     access="public"
     defaultValue="false"
     >
    Whether jointNormalMatrices should be calculated when computing the
    jointMatrices.
  </Field>

  <Field
     name="jointsChanged"
     type="OSGAny"
     category="data"
     cardinality="single"
     visibility="internal"
     access="public"
     >
    Used by the joints to efficiently notify the Skeleton that they have been
    modified and matrices need to be recalculated.
    If the trees starting at 'roots' contain for example Transform cores and
    you modify those without making changes to any SkeletonJoint cores you will
    have to call editJointsChanged() manually once per frame to force a
    recomputation of the joint matrices.
  </Field>

</FieldContainer>
