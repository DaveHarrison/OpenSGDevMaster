/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class SkeletonOgreJoint!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &SkeletonOgreJointBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 SkeletonOgreJointBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 SkeletonOgreJointBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/

//! Get the value of the SkeletonOgreJoint::_sfTranslate field.

inline
Vec3f &SkeletonOgreJointBase::editTranslate(void)
{
    editSField(TranslateFieldMask);

    return _sfTranslate.getValue();
}

//! Get the value of the SkeletonOgreJoint::_sfTranslate field.
inline
const Vec3f &SkeletonOgreJointBase::getTranslate(void) const
{
    return _sfTranslate.getValue();
}

//! Set the value of the SkeletonOgreJoint::_sfTranslate field.
inline
void SkeletonOgreJointBase::setTranslate(const Vec3f &value)
{
    editSField(TranslateFieldMask);

    _sfTranslate.setValue(value);
}
//! Get the value of the SkeletonOgreJoint::_sfRotate field.

inline
Quaternion &SkeletonOgreJointBase::editRotate(void)
{
    editSField(RotateFieldMask);

    return _sfRotate.getValue();
}

//! Get the value of the SkeletonOgreJoint::_sfRotate field.
inline
const Quaternion &SkeletonOgreJointBase::getRotate(void) const
{
    return _sfRotate.getValue();
}

//! Set the value of the SkeletonOgreJoint::_sfRotate field.
inline
void SkeletonOgreJointBase::setRotate(const Quaternion &value)
{
    editSField(RotateFieldMask);

    _sfRotate.setValue(value);
}
//! Get the value of the SkeletonOgreJoint::_sfScale field.

inline
Vec3f &SkeletonOgreJointBase::editScale(void)
{
    editSField(ScaleFieldMask);

    return _sfScale.getValue();
}

//! Get the value of the SkeletonOgreJoint::_sfScale field.
inline
const Vec3f &SkeletonOgreJointBase::getScale(void) const
{
    return _sfScale.getValue();
}

//! Set the value of the SkeletonOgreJoint::_sfScale field.
inline
void SkeletonOgreJointBase::setScale(const Vec3f &value)
{
    editSField(ScaleFieldMask);

    _sfScale.setValue(value);
}
//! Get the value of the SkeletonOgreJoint::_sfInvBindTranslate field.

inline
Vec3f &SkeletonOgreJointBase::editInvBindTranslate(void)
{
    editSField(InvBindTranslateFieldMask);

    return _sfInvBindTranslate.getValue();
}

//! Get the value of the SkeletonOgreJoint::_sfInvBindTranslate field.
inline
const Vec3f &SkeletonOgreJointBase::getInvBindTranslate(void) const
{
    return _sfInvBindTranslate.getValue();
}

//! Set the value of the SkeletonOgreJoint::_sfInvBindTranslate field.
inline
void SkeletonOgreJointBase::setInvBindTranslate(const Vec3f &value)
{
    editSField(InvBindTranslateFieldMask);

    _sfInvBindTranslate.setValue(value);
}
//! Get the value of the SkeletonOgreJoint::_sfInvBindRotate field.

inline
Quaternion &SkeletonOgreJointBase::editInvBindRotate(void)
{
    editSField(InvBindRotateFieldMask);

    return _sfInvBindRotate.getValue();
}

//! Get the value of the SkeletonOgreJoint::_sfInvBindRotate field.
inline
const Quaternion &SkeletonOgreJointBase::getInvBindRotate(void) const
{
    return _sfInvBindRotate.getValue();
}

//! Set the value of the SkeletonOgreJoint::_sfInvBindRotate field.
inline
void SkeletonOgreJointBase::setInvBindRotate(const Quaternion &value)
{
    editSField(InvBindRotateFieldMask);

    _sfInvBindRotate.setValue(value);
}
//! Get the value of the SkeletonOgreJoint::_sfInvBindScale field.

inline
Vec3f &SkeletonOgreJointBase::editInvBindScale(void)
{
    editSField(InvBindScaleFieldMask);

    return _sfInvBindScale.getValue();
}

//! Get the value of the SkeletonOgreJoint::_sfInvBindScale field.
inline
const Vec3f &SkeletonOgreJointBase::getInvBindScale(void) const
{
    return _sfInvBindScale.getValue();
}

//! Set the value of the SkeletonOgreJoint::_sfInvBindScale field.
inline
void SkeletonOgreJointBase::setInvBindScale(const Vec3f &value)
{
    editSField(InvBindScaleFieldMask);

    _sfInvBindScale.setValue(value);
}
//! Get the value of the SkeletonOgreJoint::_sfOffsetTranslate field.

inline
Vec3f &SkeletonOgreJointBase::editOffsetTranslate(void)
{
    editSField(OffsetTranslateFieldMask);

    return _sfOffsetTranslate.getValue();
}

//! Get the value of the SkeletonOgreJoint::_sfOffsetTranslate field.
inline
const Vec3f &SkeletonOgreJointBase::getOffsetTranslate(void) const
{
    return _sfOffsetTranslate.getValue();
}

//! Set the value of the SkeletonOgreJoint::_sfOffsetTranslate field.
inline
void SkeletonOgreJointBase::setOffsetTranslate(const Vec3f &value)
{
    editSField(OffsetTranslateFieldMask);

    _sfOffsetTranslate.setValue(value);
}
//! Get the value of the SkeletonOgreJoint::_sfOffsetRotate field.

inline
Quaternion &SkeletonOgreJointBase::editOffsetRotate(void)
{
    editSField(OffsetRotateFieldMask);

    return _sfOffsetRotate.getValue();
}

//! Get the value of the SkeletonOgreJoint::_sfOffsetRotate field.
inline
const Quaternion &SkeletonOgreJointBase::getOffsetRotate(void) const
{
    return _sfOffsetRotate.getValue();
}

//! Set the value of the SkeletonOgreJoint::_sfOffsetRotate field.
inline
void SkeletonOgreJointBase::setOffsetRotate(const Quaternion &value)
{
    editSField(OffsetRotateFieldMask);

    _sfOffsetRotate.setValue(value);
}
//! Get the value of the SkeletonOgreJoint::_sfOffsetScale field.

inline
Vec3f &SkeletonOgreJointBase::editOffsetScale(void)
{
    editSField(OffsetScaleFieldMask);

    return _sfOffsetScale.getValue();
}

//! Get the value of the SkeletonOgreJoint::_sfOffsetScale field.
inline
const Vec3f &SkeletonOgreJointBase::getOffsetScale(void) const
{
    return _sfOffsetScale.getValue();
}

//! Set the value of the SkeletonOgreJoint::_sfOffsetScale field.
inline
void SkeletonOgreJointBase::setOffsetScale(const Vec3f &value)
{
    editSField(OffsetScaleFieldMask);

    _sfOffsetScale.setValue(value);
}


#ifdef OSG_MT_CPTR_ASPECT
inline
void SkeletonOgreJointBase::execSync (      SkeletonOgreJointBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (TranslateFieldMask & whichField))
        _sfTranslate.syncWith(pFrom->_sfTranslate);

    if(FieldBits::NoField != (RotateFieldMask & whichField))
        _sfRotate.syncWith(pFrom->_sfRotate);

    if(FieldBits::NoField != (ScaleFieldMask & whichField))
        _sfScale.syncWith(pFrom->_sfScale);

    if(FieldBits::NoField != (InvBindTranslateFieldMask & whichField))
        _sfInvBindTranslate.syncWith(pFrom->_sfInvBindTranslate);

    if(FieldBits::NoField != (InvBindRotateFieldMask & whichField))
        _sfInvBindRotate.syncWith(pFrom->_sfInvBindRotate);

    if(FieldBits::NoField != (InvBindScaleFieldMask & whichField))
        _sfInvBindScale.syncWith(pFrom->_sfInvBindScale);

    if(FieldBits::NoField != (OffsetTranslateFieldMask & whichField))
        _sfOffsetTranslate.syncWith(pFrom->_sfOffsetTranslate);

    if(FieldBits::NoField != (OffsetRotateFieldMask & whichField))
        _sfOffsetRotate.syncWith(pFrom->_sfOffsetRotate);

    if(FieldBits::NoField != (OffsetScaleFieldMask & whichField))
        _sfOffsetScale.syncWith(pFrom->_sfOffsetScale);
}
#endif


inline
const Char8 *SkeletonOgreJointBase::getClassname(void)
{
    return "SkeletonOgreJoint";
}
OSG_GEN_CONTAINERPTR(SkeletonOgreJoint);

OSG_END_NAMESPACE

