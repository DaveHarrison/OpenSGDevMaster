/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGANIMCHANNELFIELDS_H_
#define _OSGANIMCHANNELFIELDS_H_
#ifdef __sgi
#pragma once
#endif

#include "OSGConfig.h"
#include "OSGDynamicsDef.h"

#include "OSGFieldContainerFields.h"
#include "OSGPointerSField.h"
#include "OSGPointerMField.h"


OSG_BEGIN_NAMESPACE

class AnimChannel;

OSG_GEN_CONTAINERPTR(AnimChannel);

/*! \ingroup GrpDynamicsFieldTraits
    \ingroup GrpLibOSGDynamics
 */
template <>
struct FieldTraits<AnimChannel *> :
    public FieldTraitsFCPtrBase<AnimChannel *>
{
  private:

    static DataType             _type;

  public:

    typedef FieldTraits<AnimChannel *>  Self;

    enum                        { Convertible = NotConvertible };

    static OSG_DYNAMICS_DLLMAPPING DataType &getType(void);

    template<typename RefCountPolicy> inline
    static const Char8    *getSName     (void);

//    static const char *getSName(void) { return "SFAnimChannelPtr"; }
    template<typename RefCountPolicy> inline
    static const Char8    *getMName     (void);

//    static const char *getMName(void) { return "MFAnimChannelPtr"; }
};

template<> inline
const Char8 *FieldTraits<AnimChannel *, 0>::getSName<RecordedRefCountPolicy>(void)
{
    return "SFRecAnimChannelPtr"; 
}

template<> inline
const Char8 *FieldTraits<AnimChannel *, 0>::getSName<UnrecordedRefCountPolicy>(void)
{
    return "SFUnrecAnimChannelPtr"; 
}

template<> inline
const Char8 *FieldTraits<AnimChannel *, 0>::getSName<WeakRefCountPolicy>(void)
{
    return "SFWeakAnimChannelPtr"; 
}

template<> inline
const Char8 *FieldTraits<AnimChannel *, 0>::getSName<NoRefCountPolicy>(void)
{
    return "SFUnrefdAnimChannelPtr"; 
}

template<> inline
const Char8 *FieldTraits<AnimChannel *, 0>::getMName<RecordedRefCountPolicy>(void)
{
    return "MFRecAnimChannelPtr"; 
}

template<> inline
const Char8 *FieldTraits<AnimChannel *, 0>::getMName<UnrecordedRefCountPolicy>(void)
{
    return "MFUnrecAnimChannelPtr"; 
}

template<> inline
const Char8 *FieldTraits<AnimChannel *, 0>::getMName<WeakRefCountPolicy>(void)
{
    return "MFWeakAnimChannelPtr"; 
}

template<> inline
const Char8 *FieldTraits<AnimChannel *, 0>::getMName<NoRefCountPolicy>(void)
{
    return "MFUnrefdAnimChannelPtr"; 
}


/*! \ingroup GrpDynamicsFieldTraits
 */
template <>
struct FieldTraits<AnimChannel *, 1> :
    public FieldTraitsFCPtrBase<AnimChannel *, 1>
{
  private:

  public:
    typedef FieldTraits<AnimChannel *, 1>  Self;

    enum                        { Convertible = NotConvertible };

    static OSG_DYNAMICS_DLLMAPPING DataType &getType(void);

    template<typename RefCountPolicy> inline
    static const Char8    *getSName     (void);

    template<typename RefCountPolicy> inline
    static const Char8    *getMName     (void);
};

template<> inline
const Char8 *FieldTraits<AnimChannel *, 1>::getSName<RecordedRefCountPolicy>(void)
{
    return "SFRecChildAnimChannelPtr"; 
}

template<> inline
const Char8 *FieldTraits<AnimChannel *, 1>::getSName<UnrecordedRefCountPolicy>(void)
{
    return "SFUnrecChildAnimChannelPtr"; 
}

template<> inline
const Char8 *FieldTraits<AnimChannel *, 1>::getSName<WeakRefCountPolicy>(void)
{
    return "SFWeakChildAnimChannelPtr"; 
}

template<> inline
const Char8 *FieldTraits<AnimChannel *, 1>::getSName<NoRefCountPolicy>(void)
{
    return "SFUnrefdChildAnimChannelPtr"; 
}

template<> inline
const Char8 *FieldTraits<AnimChannel *, 1>::getMName<RecordedRefCountPolicy>(void)
{
    return "MFRecChildAnimChannelPtr"; 
}

template<> inline
const Char8 *FieldTraits<AnimChannel *, 1>::getMName<UnrecordedRefCountPolicy>(void)
{
    return "MFUnrecChildAnimChannelPtr"; 
}

template<> inline
const Char8 *FieldTraits<AnimChannel *, 1>::getMName<WeakRefCountPolicy>(void)
{
    return "MFWeakChildAnimChannelPtr"; 
}

template<> inline
const Char8 *FieldTraits<AnimChannel *, 1>::getMName<NoRefCountPolicy>(void)
{
    return "MFUnrefdChildAnimChannelPtr"; 
}


#ifndef DOXYGEN_SHOULD_SKIP_THIS
/*! \ingroup GrpDynamicsFieldSFields */
typedef PointerSField<AnimChannel *,
                      RecordedRefCountPolicy  > SFRecAnimChannelPtr;
/*! \ingroup GrpDynamicsFieldSFields */
typedef PointerSField<AnimChannel *,
                      UnrecordedRefCountPolicy> SFUnrecAnimChannelPtr;
/*! \ingroup GrpDynamicsFieldSFields */
typedef PointerSField<AnimChannel *,
                      WeakRefCountPolicy      > SFWeakAnimChannelPtr;
/*! \ingroup GrpDynamicsFieldSFields */
typedef PointerSField<AnimChannel *,
                      NoRefCountPolicy        > SFUncountedAnimChannelPtr;


/*! \ingroup GrpDynamicsFieldMFields */
typedef PointerMField<AnimChannel *,
                      RecordedRefCountPolicy  > MFRecAnimChannelPtr;
/*! \ingroup GrpDynamicsFieldMFields */
typedef PointerMField<AnimChannel *,
                      UnrecordedRefCountPolicy> MFUnrecAnimChannelPtr;
/*! \ingroup GrpDynamicsFieldMFields */
typedef PointerMField<AnimChannel *,
                      WeakRefCountPolicy      > MFWeakAnimChannelPtr;
/*! \ingroup GrpDynamicsFieldMFields */
typedef PointerMField<AnimChannel *,
                      NoRefCountPolicy        > MFUncountedAnimChannelPtr;



/*! \ingroup GrpDynamicsFieldSFields */
typedef ChildPointerSField<
          AnimChannel *, 
          UnrecordedRefCountPolicy,
          1             > SFUnrecChildAnimChannelPtr;


/*! \ingroup GrpDynamicsFieldMFields */
typedef ChildPointerMField<
          AnimChannel *, 
          UnrecordedRefCountPolicy,
          1             > MFUnrecChildAnimChannelPtr;



#else // these are the doxygen hacks

/*! \ingroup GrpDynamicsFieldSFields \ingroup GrpLibOSGDynamics */
struct SFRecAnimChannelPtr : 
    public PointerSField<AnimChannel *,
                         RecordedRefCountPolicy> {};
/*! \ingroup GrpDynamicsFieldSFields \ingroup GrpLibOSGDynamics */
struct SFUnrecAnimChannelPtr : 
    public PointerSField<AnimChannel *,
                         UnrecordedRefCountPolicy> {};
/*! \ingroup GrpDynamicsFieldSFields \ingroup GrpLibOSGDynamics */
struct SFWeakAnimChannelPtr :
    public PointerSField<AnimChannel *,
                         WeakRefCountPolicy> {};
/*! \ingroup GrpDynamicsFieldSFields \ingroup GrpLibOSGDynamics */
struct SFUncountedAnimChannelPtr :
    public PointerSField<AnimChannel *,
                         NoRefCountPolicy> {};


/*! \ingroup GrpDynamicsFieldMFields \ingroup GrpLibOSGDynamics */
struct MFRecAnimChannelPtr :
    public PointerMField<AnimChannel *,
                         RecordedRefCountPolicy  > {};
/*! \ingroup GrpDynamicsFieldMFields \ingroup GrpLibOSGDynamics */
struct MFUnrecAnimChannelPtr :
    public PointerMField<AnimChannel *,
                         UnrecordedRefCountPolicy> {};
/*! \ingroup GrpDynamicsFieldMFields \ingroup GrpLibOSGDynamics */
struct MFWeakAnimChannelPtr :
    public PointerMField<AnimChannel *,
                         WeakRefCountPolicy      > {};
/*! \ingroup GrpDynamicsFieldMFields \ingroup GrpLibOSGDynamics */
struct MFUncountedAnimChannelPtr :
    public PointerMField<AnimChannel *,
                         NoRefCountPolicy        > {};



/*! \ingroup GrpDynamicsFieldSFields \ingroup GrpLibOSGDynamics */
struct SFUnrecChildAnimChannelPtr :
    public ChildPointerSField<
        AnimChannel *, 
        UnrecordedRefCountPolicy,
        1             > {};


/*! \ingroup GrpDynamicsFieldMFields \ingroup GrpLibOSGDynamics */
struct MFUnrecChildAnimChannelPtr :
    public ChildPointerMField<
        AnimChannel *, 
        UnrecordedRefCountPolicy,
        1             > {};


#endif // these are the doxygen hacks

OSG_END_NAMESPACE

#endif /* _OSGANIMCHANNELFIELDS_H_ */
