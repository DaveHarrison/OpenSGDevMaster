/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class AnimQuaternionDataSource
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGANIMQUATERNIONDATASOURCEBASE_H_
#define _OSGANIMQUATERNIONDATASOURCEBASE_H_
#ifdef __sgi
#pragma once
#endif


#include "OSGConfig.h"
#include "OSGDynamicsDef.h"

//#include "OSGBaseTypes.h"

#include "OSGAnimKeyFrameDataSource.h" // Parent

#include "OSGMathFields.h"              // Values type
#include "OSGVecFields.h"               // InTangentsX type

#include "OSGAnimQuaternionDataSourceFields.h"

OSG_BEGIN_NAMESPACE

class AnimQuaternionDataSource;

//! \brief AnimQuaternionDataSource Base Class.

class OSG_DYNAMICS_DLLMAPPING AnimQuaternionDataSourceBase : public AnimKeyFrameDataSource
{
  public:

    typedef AnimKeyFrameDataSource Inherited;
    typedef AnimKeyFrameDataSource ParentContainer;

    typedef Inherited::TypeObject TypeObject;
    typedef TypeObject::InitPhase InitPhase;

    OSG_GEN_INTERNALPTR(AnimQuaternionDataSource);

    /*==========================  PUBLIC  =================================*/

  public:

    enum
    {
        ValuesFieldId = Inherited::NextFieldId,
        InTangentsXFieldId = ValuesFieldId + 1,
        InTangentsYFieldId = InTangentsXFieldId + 1,
        InTangentsZFieldId = InTangentsYFieldId + 1,
        InTangentsWFieldId = InTangentsZFieldId + 1,
        OutTangentsXFieldId = InTangentsWFieldId + 1,
        OutTangentsYFieldId = OutTangentsXFieldId + 1,
        OutTangentsZFieldId = OutTangentsYFieldId + 1,
        OutTangentsWFieldId = OutTangentsZFieldId + 1,
        NextFieldId = OutTangentsWFieldId + 1
    };

    static const OSG::BitVector ValuesFieldMask =
        (TypeTraits<BitVector>::One << ValuesFieldId);
    static const OSG::BitVector InTangentsXFieldMask =
        (TypeTraits<BitVector>::One << InTangentsXFieldId);
    static const OSG::BitVector InTangentsYFieldMask =
        (TypeTraits<BitVector>::One << InTangentsYFieldId);
    static const OSG::BitVector InTangentsZFieldMask =
        (TypeTraits<BitVector>::One << InTangentsZFieldId);
    static const OSG::BitVector InTangentsWFieldMask =
        (TypeTraits<BitVector>::One << InTangentsWFieldId);
    static const OSG::BitVector OutTangentsXFieldMask =
        (TypeTraits<BitVector>::One << OutTangentsXFieldId);
    static const OSG::BitVector OutTangentsYFieldMask =
        (TypeTraits<BitVector>::One << OutTangentsYFieldId);
    static const OSG::BitVector OutTangentsZFieldMask =
        (TypeTraits<BitVector>::One << OutTangentsZFieldId);
    static const OSG::BitVector OutTangentsWFieldMask =
        (TypeTraits<BitVector>::One << OutTangentsWFieldId);
    static const OSG::BitVector NextFieldMask =
        (TypeTraits<BitVector>::One << NextFieldId);
        
    typedef MFQuaternion      MFValuesType;
    typedef MFVec2f           MFInTangentsXType;
    typedef MFVec2f           MFInTangentsYType;
    typedef MFVec2f           MFInTangentsZType;
    typedef MFVec2f           MFInTangentsWType;
    typedef MFVec2f           MFOutTangentsXType;
    typedef MFVec2f           MFOutTangentsYType;
    typedef MFVec2f           MFOutTangentsZType;
    typedef MFVec2f           MFOutTangentsWType;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static FieldContainerType &getClassType   (void);
    static UInt32              getClassTypeId (void);
    static UInt16              getClassGroupId(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType         (void);
    virtual const FieldContainerType &getType         (void) const;

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */


                  MFQuaternion        *editMFValues         (void);
            const MFQuaternion        *getMFValues          (void) const;

                  MFVec2f             *editMFInTangentsX    (void);
            const MFVec2f             *getMFInTangentsX     (void) const;

                  MFVec2f             *editMFInTangentsY    (void);
            const MFVec2f             *getMFInTangentsY     (void) const;

                  MFVec2f             *editMFInTangentsZ    (void);
            const MFVec2f             *getMFInTangentsZ     (void) const;

                  MFVec2f             *editMFInTangentsW    (void);
            const MFVec2f             *getMFInTangentsW     (void) const;

                  MFVec2f             *editMFOutTangentsX   (void);
            const MFVec2f             *getMFOutTangentsX    (void) const;

                  MFVec2f             *editMFOutTangentsY   (void);
            const MFVec2f             *getMFOutTangentsY    (void) const;

                  MFVec2f             *editMFOutTangentsZ   (void);
            const MFVec2f             *getMFOutTangentsZ    (void) const;

                  MFVec2f             *editMFOutTangentsW   (void);
            const MFVec2f             *getMFOutTangentsW    (void) const;


                  Quaternion          &editValues         (const UInt32 index);
            const Quaternion          &getValues          (const UInt32 index) const;

                  Vec2f               &editInTangentsX    (const UInt32 index);
            const Vec2f               &getInTangentsX     (const UInt32 index) const;

                  Vec2f               &editInTangentsY    (const UInt32 index);
            const Vec2f               &getInTangentsY     (const UInt32 index) const;

                  Vec2f               &editInTangentsZ    (const UInt32 index);
            const Vec2f               &getInTangentsZ     (const UInt32 index) const;

                  Vec2f               &editInTangentsW    (const UInt32 index);
            const Vec2f               &getInTangentsW     (const UInt32 index) const;

                  Vec2f               &editOutTangentsX   (const UInt32 index);
            const Vec2f               &getOutTangentsX    (const UInt32 index) const;

                  Vec2f               &editOutTangentsY   (const UInt32 index);
            const Vec2f               &getOutTangentsY    (const UInt32 index) const;

                  Vec2f               &editOutTangentsZ   (const UInt32 index);
            const Vec2f               &getOutTangentsZ    (const UInt32 index) const;

                  Vec2f               &editOutTangentsW   (const UInt32 index);
            const Vec2f               &getOutTangentsW    (const UInt32 index) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr MField Set                                */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (ConstFieldMaskArg  whichField);
    virtual void   copyToBin  (BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);
    virtual void   copyFromBin(BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  AnimQuaternionDataSourceTransitPtr  create          (void);
    static  AnimQuaternionDataSource           *createEmpty     (void);

    static  AnimQuaternionDataSourceTransitPtr  createLocal     (
                                               BitVector bFlags = FCLocal::All);

    static  AnimQuaternionDataSource            *createEmptyLocal(
                                              BitVector bFlags = FCLocal::All);

    static  AnimQuaternionDataSourceTransitPtr  createDependent  (BitVector bFlags);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldContainerTransitPtr shallowCopy     (void) const;
    virtual FieldContainerTransitPtr shallowCopyLocal(
                                       BitVector bFlags = FCLocal::All) const;
    virtual FieldContainerTransitPtr shallowCopyDependent(
                                                      BitVector bFlags) const;

    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/

  protected:

    static TypeObject _type;

    static       void   classDescInserter(TypeObject &oType);
    static const Char8 *getClassname     (void             );

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    MFQuaternion      _mfValues;
    MFVec2f           _mfInTangentsX;
    MFVec2f           _mfInTangentsY;
    MFVec2f           _mfInTangentsZ;
    MFVec2f           _mfInTangentsW;
    MFVec2f           _mfOutTangentsX;
    MFVec2f           _mfOutTangentsY;
    MFVec2f           _mfOutTangentsZ;
    MFVec2f           _mfOutTangentsW;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    AnimQuaternionDataSourceBase(void);
    AnimQuaternionDataSourceBase(const AnimQuaternionDataSourceBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~AnimQuaternionDataSourceBase(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     onCreate                                */
    /*! \{                                                                 */


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Generic Field Access                      */
    /*! \{                                                                 */

    GetFieldHandlePtr  getHandleValues          (void) const;
    EditFieldHandlePtr editHandleValues         (void);
    GetFieldHandlePtr  getHandleInTangentsX     (void) const;
    EditFieldHandlePtr editHandleInTangentsX    (void);
    GetFieldHandlePtr  getHandleInTangentsY     (void) const;
    EditFieldHandlePtr editHandleInTangentsY    (void);
    GetFieldHandlePtr  getHandleInTangentsZ     (void) const;
    EditFieldHandlePtr editHandleInTangentsZ    (void);
    GetFieldHandlePtr  getHandleInTangentsW     (void) const;
    EditFieldHandlePtr editHandleInTangentsW    (void);
    GetFieldHandlePtr  getHandleOutTangentsX    (void) const;
    EditFieldHandlePtr editHandleOutTangentsX   (void);
    GetFieldHandlePtr  getHandleOutTangentsY    (void) const;
    EditFieldHandlePtr editHandleOutTangentsY   (void);
    GetFieldHandlePtr  getHandleOutTangentsZ    (void) const;
    EditFieldHandlePtr editHandleOutTangentsZ   (void);
    GetFieldHandlePtr  getHandleOutTangentsW    (void) const;
    EditFieldHandlePtr editHandleOutTangentsW   (void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual void execSyncV(      FieldContainer    &oFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);

            void execSync (      AnimQuaternionDataSourceBase *pFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     Aspect Create                            */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual FieldContainer *createAspectCopy(
                                    const FieldContainer *pRefAspect) const;
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */
    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    virtual void resolveLinks(void);

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/

  private:
    /*---------------------------------------------------------------------*/

    // prohibit default functions (move to 'public' if you need one)
    void operator =(const AnimQuaternionDataSourceBase &source);
};

typedef AnimQuaternionDataSourceBase *AnimQuaternionDataSourceBaseP;

OSG_END_NAMESPACE

#endif /* _OSGANIMQUATERNIONDATASOURCEBASE_H_ */
